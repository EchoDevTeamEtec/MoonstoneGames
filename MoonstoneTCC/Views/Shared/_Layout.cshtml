<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MoonstoneTCC</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="~/css/site.css" rel="stylesheet" />
    
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #3A0066; /* Cinza escuro */
            
        }


        /* Estilização para o fundo roxo com bola */
        .btn-icon {
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: rgba(128, 0, 128, 0.8); /* Cor roxa com transparência */
            color: white;
            margin: 0 5px;
            transition: transform 0.3s, background-color 0.3s;
        }

            .btn-icon:hover {
                background-color: rgba(128, 0, 128, 1); /* Fundo roxo mais escuro no hover */
                transform: scale(1.1); /* Efeito de crescimento */
            }

        .navbar {
            background: #3B0056;
        }

        .navbar-brand img {
            height: 55px; /* Ajuste o tamanho da logo */
        }

        .navbar-nav .nav-link {
            font-size: 1.0rem; /* Aumenta o tamanho do texto */
            font-weight: bold;
            margin-right: 3px;
        }

        .navbar-nav .nav-item:last-child {
            margin-right: 3px; /* Remove o espaçamento extra do último item */
        }

        #hamburgerMenu {
            margin-left: 3px; /* Espaçamento entre o menu hambúrguer e o restante */
        }
        /*menu ha*/
        .dropdown-menu {
            position: absolute;
            top: 100%;
            right: 0;
            z-index: 1050;
            min-width: 10rem;
            padding: 0.5rem 0;
            background-color: #ffffff;
            border: 1px solid rgba(0, 0, 0, 0.15);
            border-radius: 0.25rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.175);
        }
        /*Campo de pesquisa */


        .search-bar {
            width: 600px;
            max-width: 1200px; /* Aumenta a largura máxima */
            display: flex;
            align-items: center;
            border: 2px solid #ccc;
            border-radius: 30px; /* Ajusta o arredondamento para um campo maior */
            padding: 10px 20px; /* Aumenta o espaçamento interno */
            background-color: #f9f9f9;
            transition: box-shadow 0.3s ease;
            margin-left:20px;
        }

            .search-bar:hover,
            .search-bar:focus-within {
                
            }

        .search-input {
            flex: 1;
            border: none;
            outline: none;
            font-size: 16px;
        }

            .search-input::placeholder {
                color: #999;
            }

        .search-btn {
            background: none;
            border: none;
            padding: 5px; /* Espaçamento interno */
            cursor: pointer;
            font-size: 24px; /* Aumenta o tamanho do ícone */
            color: #007bff; /* Cor do ícone */
            display: flex;
            align-items: center;
            justify-content: center;
        }


            .search-btn i {
                font-size: inherit; /* Garante que o ícone use o mesmo tamanho do botão */
                pointer-events: none;
            }

            .search-btn:focus {
                outline: none;
            }
        /* Sugestões de pesquisa */
        .search-suggestions {

        }

        .search-bar:focus-within #suggestionsList {
            display: block;
        }



        /* Estilos do menu hambúrguer */
        .btn-icon {
            background-color: #6a1b9a;
            border: none;
            border-radius: 50%;
            padding: 10px;
            transition: transform 0.3s ease, background-color 0.3s ease;
        }

            .btn-icon:hover {
                background-color: #4a0072;
                transform: rotate(5deg);
            }

        /* Estilos do menu dropdown */
        .dropdown-menu {
            display: none;
            position: absolute;
            top: 100%;
            right: 0;
            z-index: 1050;
            min-width: 12rem;
            background-color: #F5FDFF;
            border: 1px solid #ce93d8;
            border-radius: 0.5rem;
            box-shadow: 0 0.5rem 1.5rem rgba(106, 27, 154, 0.3);
            overflow: hidden;
            opacity: 0;
            transform: translateY(-10px);
            transition: opacity 0.3s ease, transform 0.3s ease;
        }

            .dropdown-menu.show {
                display: block;
                opacity: 1;
                transform: translateY(0);
            }

        /* Itens do menu */
        .dropdown-item {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            color:black;
            font-weight: bold;
            text-decoration: none;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

            .dropdown-item i {
                margin-right: 0.75rem;
                color:black;
                font-size: 1.2rem;
            }

            .dropdown-item:hover i {
                color: #fff; /* Altera a cor do ícone para branco no hover */
                transition: color 0.3s ease; /* Transição suave da cor */
            }


            .dropdown-item:hover {
                background: linear-gradient(90deg, #6a1b9a, #2196f3); /* Degradê da cor roxa para azul */
                color: #fff; /* Deixa o texto branco no hover */
                transition: background 0.3s ease, color 0.3s ease; /* Transição suave */
            }


    </style>
</head>
   <body>
    @if (ViewData["HideHeader"] == null || !(bool)ViewData["HideHeader"])
    {
        <header>
            <nav class="navbar navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3">
                <div class="container-fluid">
                    <!-- Substituir pelo caminho da sua imagem -->
                    <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                        <img src="~/img/userlmn_190a820892874567a91071d0542da791.png" alt="MoonstoneTCC">
                    </a>
                    <button class="navbar-toggler text-white" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
                            aria-controls="navbarSuppoon">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    
                    <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                        
                        @await Component.InvokeAsync("CategoriaMenu")
                        <form class="search-form d-flex justify-content-end" asp-controller="Jogo" asp-action="Search" method="get" role="search">
                            <div class="search-bar position-relative">
                                <input class="form-control search-input"
                                       type="text"
                                       placeholder="Pesquise por nome do jogo, categoria, plataformas, descrição, gênero ou preço."
                                       name="searchString"
                                       id="searchInput"
                                       aria-label="Pesquisar Jogos"
                                       autocomplete="off">
                                <div id="suggestionsList" class="search-suggestions"></div>
                                <button class="btn search-btn" type="submit">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </form>
                        @await Component.InvokeAsync("CarrinhoCompraResumo")
                        <ul class="navbar-nav flex-grow-1 justify-content-end">
                            <li class="nav-item">
                                <a class="nav-link text-white btn btn-icon" asp-area="" asp-controller="Home" asp-action="Index" title="Home">
                                    <i class="fa-solid fa-house"></i>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-white btn btn-icon" asp-area="" asp-controller="Jogo" asp-action="List" title="Jogos">
                                    <i class="fa-solid fa-gamepad"></i>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-white btn btn-icon" asp-area="" asp-controller="Contato" asp-action="Index" title="Contato">
                                    <i class="fa-solid fa-envelope"></i>
                                </a>
                            </li>
                        </ul>
                        @await Html.PartialAsync("_LoginPartial")
                        @if (User.IsInRole("Admin"))

                        {
                            <a class="nav-link text-light" asp-area="Admin" asp-controller="Admin" asp-action="Index" title="Admin">
                                <i class="fa-solid fa-user-gear"></i>
                            </a>

                        }
                        <!-- Ícone do menu hambúrguer -->
                        <button id="hamburgerMenu" class="btn btn-icon text-white" title="Menu">
                            <i class="fa-solid fa-bars"></i>
                        </button>

                        <!-- Menu Dropdown -->
                        <div id="dropdownMenu" class="dropdown-menu dropdown-menu-end">
                            <a class="dropdown-item" asp-area="" asp-controller="Início" asp-action="Index">
                                <i class="fa-solid fa-house"></i> Home
                            </a>
                            <a class="dropdown-item" asp-area="" asp-controller="Tendências" asp-action="List">
                                <i class="fa-solid fa-chart-line"></i> Tendências
                            </a>
                            <a class="dropdown-item" asp-area="" asp-controller="sobre_nos" asp-action="Index">
                                <i class="fa-solid fa-info-circle"></i> Sobre Nós
                            </a>
                            <a class="dropdown-item" asp-area="" asp-controller="Contate_nos" asp-action="Index">
                                <i class="fa-solid fa-envelope"></i> Contate-nos
                            </a>
                            <div class="dropdown-divider"></div>

                            @if (User.IsInRole("Admin"))

                            {
                                <a class="dropdown-item" asp-area="Admin" asp-controller="Admin" asp-action="Index">
                                    <i class="fa-solid fa-user-gear"></i> Admin
                                </a>
                            }

                            <a class="dropdown-item" asp-area="" asp-controller="Account" asp-action="Register">
                                <i class="fa-solid fa-user-plus"></i> Cadastrar
                            </a>
                        </div>



                    </div>
                </div>
            </nav>
        </header>
    }

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const hamburgerMenu = document.getElementById("hamburgerMenu");
            const dropdownMenu = document.getElementById("dropdownMenu");

            // Alterna a visibilidade com animação
            hamburgerMenu.addEventListener("click", function () {
                dropdownMenu.classList.toggle("show");
            });

            // Fecha o menu ao clicar fora dele
            document.addEventListener("click", function (event) {
                if (!dropdownMenu.contains(event.target) && !hamburgerMenu.contains(event.target)) {
                    dropdownMenu.classList.remove("show");
                }
            });
        });

    </script>


    <partial name="_Footer">
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
